<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>academic on Portfolio</title><link>https://0x5bjorn.github.io/categories/academic/</link><description>Recent content in academic on Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 03 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://0x5bjorn.github.io/categories/academic/index.xml" rel="self" type="application/rss+xml"/><item><title>User Mode thread Scheduling</title><link>https://0x5bjorn.github.io/portfolio/aosv-ums-project/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://0x5bjorn.github.io/portfolio/aosv-ums-project/</guid><description>AOSV Final Project Report A.Y. 2020/2021
Introduction The goal of the project was to implement User Mode thread Scheduling mechanism for the Linux distribution, inspired by the User-mode scheduling (UMS) implementation available in the Windows kernel [1]. UMS is a mechanism that allows applications/programs in the user mode to schedule their own threads without involving the kernel/system scheduler. The main goal and advantage is that thread switching in user mode is &amp;ldquo;more efficient than thread pools for managing large numbers of short-duration work items that require few system calls.</description></item></channel></rss>